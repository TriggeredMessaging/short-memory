// Generated by CoffeeScript 1.4.0
(function() {
  var ShortMemory;

  ShortMemory = (function() {
    var constructor;

    function ShortMemory() {}

    ShortMemory.prototype.heap = [];

    ShortMemory.prototype.Memorable = require('./memorable.js');

    ShortMemory.prototype.MaxSize = 0;

    ShortMemory.prototype.MaxRecords = 0;

    ShortMemory.prototype.MaxAge = 0;

    constructor = function(options) {
      var _ref, _ref1, _ref2;
      if (options == null) {
        options = {};
      }
      if ((_ref = options.maxSize) == null) {
        options.maxSize = 0;
      }
      if ((_ref1 = options.maxRecords) == null) {
        options.maxRecords = 0;
      }
      if ((_ref2 = options.maxAge) == null) {
        options.maxAge = 0;
      }
      this.MaxSize = maxSize;
      this.MaxRecords = maxRecords;
      return this.MaxAge = maxAge;
    };

    ShortMemory.prototype.Set = function(key, data, options) {
      var memorable;
      try {
        memorable = new Memorable(key, data, options);
        return heap.push(memorable);
      } catch (ex) {
        return console.error("Unable to set memorable: " + ex);
      }
    };

    ShortMemory.prototype.CalculateSize = function() {
      var memorable, size, _i, _len, _ref;
      size = 0;
      _ref = this.heap;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        memorable = _ref[_i];
        size += memorable.Size;
      }
      return size;
    };

    return ShortMemory;

  })();

  module.exports = ShortMemory;

}).call(this);
