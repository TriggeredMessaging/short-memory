{"ts":1351195171962,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// Generated by CoffeeScript 1.4.0\n(function() {\n  var ShortMemory;\n\n  ShortMemory = (function() {\n    var heap, memorable;\n\n    function ShortMemory() {}\n\n    heap = [];\n\n    memorable = require('./memorable.js');\n\n    ShortMemory.prototype.MaxSize = 0;\n\n    ShortMemory.prototype.MaxRecords = 0;\n\n    ShortMemory.prototype.MaxAge = 0;\n\n    ShortMemory.prototype.Size = function() {\n      var bytes, check, clearFuncs, func, isChecked, stack, uncheck, value;\n      clearFuncs = [];\n      stack = [heap];\n      bytes = 0;\n      func = null;\n      isChecked = function(item) {\n        return item[\"__c\"] || false;\n      };\n      check = function(item) {\n        return item[\"__c\"] = true;\n      };\n      uncheck = function(item) {\n        return delete item[\"__c\"];\n      };\n      while (stack.length) {\n        value = stack.pop();\n        (function(value) {\n          var i, val;\n          if (typeof value === 'string') {\n            return bytes += value.length * 2;\n          } else if (typeof value === 'boolean') {\n            return bytes += 4;\n          } else if (typeof value === 'number') {\n            return bytes += 8;\n          } else if (typeof value === 'object' && !isChecked(value)) {\n            clearFuncs.push(function() {\n              return uncheck(value);\n            });\n            for (i in value) {\n              val = value[i];\n              if (value.hasOwnProperty(i)) {\n                stack.push(val);\n              }\n            }\n            return check(value);\n          }\n        })(value);\n      }\n      while (func = clearFuncs.pop()) {\n        func.call();\n      }\n      return bytes;\n    };\n\n    return ShortMemory;\n\n  })();\n\n  module.exports = ShortMemory;\n\n}).call(this);\n"]],"start1":0,"start2":0,"length1":0,"length2":1718}]],"length":1718}
