{"ts":1351195192246,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"class Memorable\n  Key: \"\"\n  Data: {}\n  Time: new Date()\n  Invalid: false\n  Expires: 0\n  constructor: (key, data, options) ->\n    if typeof key is 'undefined' then throw \"Memorable missing key element\"\n    if typeof data is 'undefined' then throw \"Memorable missing data element\"\n    options?= {}\n    options.maxAge?= 0\n    @Key = key\n    @Data = data\n    if maxAge isnt 0\n      @Expires = @Time.now + (maxAge * 1000)\n  IsExpired: ->\n    return @Expires is 0 or @Time.now < @Expires\n  Invalidate ->\n    @Invalid = true\n\nmodule.exports = Memorable"]],"start1":0,"start2":0,"length1":0,"length2":545}]],"length":545}
{"contributors":[],"silentsave":false,"ts":1351196142489,"patch":[[{"diffs":[[0,": false\n"],[1,"  Size: 0\n"],[0,"  Expire"]],"start1":65,"start2":65,"length1":16,"length2":26},{"diffs":[[0,"d = true"],[1,"\n  CalculateSize ->\n    clearFuncs = []\n    stack = [heap]\n    bytes = 0\n    func = null\n    isChecked = (item)->\n      item[\"__c\"] || false;\n    check = (item)->\n      item[\"__c\"] = true;\n    uncheck = (item)->\n      delete item[\"__c\"]\n    while(stack.length)\n      value = stack.pop()\n      do(value)->\n        if typeof value is 'string'\n          bytes += value.length * 2\n        else if typeof value is 'boolean'\n          bytes += 4\n        else if typeof value is 'number'\n          bytes += 8\n        else if typeof value is 'object' and not isChecked value\n          clearFuncs.push ->\n            uncheck value\n          for i,val of value\n            if value.hasOwnProperty i\n              stack.push val\n          check value\n    while func = clearFuncs.pop()\n      func.call()\n    return bytes"],[0,"\n\nmodule"]],"start1":519,"start2":519,"length1":16,"length2":824}]],"length":1363,"saved":false}
{"ts":1351196332677,"patch":[[{"diffs":[[0,"* 1000)\n"],[1,"    @Size = @CalculateSize()\n"],[0,"  IsExpi"]],"start1":419,"start2":419,"length1":16,"length2":45},{"diffs":[[0,"Expired: ->\n"],[-1,""],[0,"    return @"]],"start1":460,"start2":460,"length1":24,"length2":24},{"diffs":[[0,"validate"],[1,":"],[0," ->\n    "]],"start1":525,"start2":525,"length1":16,"length2":17},{"diffs":[[0,"lateSize"],[1,":"],[0," ->\n    "]],"start1":565,"start2":565,"length1":16,"length2":17},{"diffs":[[0,"cs = []\n"],[-1,""],[0,"    stac"]],"start1":590,"start2":590,"length1":16,"length2":16},{"diffs":[[0,"tack = ["],[1,"@"],[0,"heap]\n  "]],"start1":603,"start2":603,"length1":16,"length2":17}]],"length":1395,"saved":false}
